С++ ООП Домашнее задание №8 (Двусвязанные списки и шаблоны классов)

1. Дописать класс List начатый в классе (кто не успел)
2. Перевисать класс List на использование шаблонов (чтобы мог хранить не только int, а любые типы данных, в том числе и написанные самостоятельно).

3. Подумать и придумать себе интересное задание на экзамен — задача должна быть интересная и использовать как можно больше из материала, который мы проходим (ООП).

4. Создать шаблонный класс-контейнер Array, который представляет собой массив, позволяющий хранить объекты заданного типа. Класс должен реализовывать следующие функции:
GetSize — получение размера массива (количество элементов, под которые выделена память);
SetSize(int size, int grow = 1) — установка размера массива (если параметр size больше предыдущего размера массива, то выделяется дополнительный блок памяти, если нет, то "лишние" элементы теряются и память освобождается); параметр grow определяет для какого количества элементов необходимо выделить память, если количество элементов превосходит текущий размер массива. Например, SetSize(5, 5); означает, что при добавлении 6-го элемента размер массива становится равным 10, при добавлении 11-го — 15 и т. д.;
GetUpperBound — получение последнего допустимого индекса в массиве. Например, если при размере массива 10, вы добавляете в него 4 элемента, то функция вернет 3;
IsEmpty — массив пуст?
FreeExtra — удалить "лишнюю" память (выше последнего допустимого индекса);
RemoveAll — удалить все;
GetAt — получение определенного элемента (по индексу);
SetAt — установка нового значения для определенного элемента (индекс элемента должен быть меньше текущего размера массива);
operator [] — для реализации двух предыдущих функций;
Add — добавление элемента в массив (при необходимости массив увеличивается на значение grow функции SetSize);
Append — "сложение" двух массивов;
operator =;
GetData — получения адреса массива с данными;
InsertAt — вставка элемента(-ов) в заданную позицию O.RemoveAt — удаление элемента(-ов) с заданной позиции.